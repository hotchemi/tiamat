{
  "name": "Tiamat",
  "tagline": "Reactive SharedPreferences code generator for Android.",
  "body": "# Tiamat\r\n\r\n[![Build Status](https://travis-ci.org/hotchemi/tiamat.svg?branch=master)](https://travis-ci.org/hotchemi/tiamat)\r\n\r\nTiamat is an Android library generates **Reactive SharedPreferences** code.\r\n\r\n### Motivation\r\n\r\n- `SharedPreferences` tends to be a mess during a long development history.\r\n  - We need a way to manage keys effectively like database definition in ORM.\r\n- `SharedPreferences` is just a data so that we wanna deal with them as `Observable` or `Action` of RxJava.\r\n\r\n## Usage\r\n\r\n### Define keys\r\n\r\nYou can define preference keys like the following.\r\n\r\nCurrently tiamat supports `boolean`, `String`, `float`, `int`, `long` and `Set<String>` types.\r\n\r\n```java\r\n@Pref(\"sample\")\r\nclass Sample {\r\n    @Key(name = \"long_value\")\r\n    long longValue = false;\r\n    // you can define default value like stringValue\r\n    @Key(name = \"string_value\")\r\n    String stringValue = \"default_value\";\r\n    @Key(name = \"boolean_value\")\r\n    boolean booleanValue;\r\n    @Key(name = \"int_value\")\r\n    int intValue;\r\n    @Key(name = \"float_value\")\r\n    float floatValue;\r\n    @Key(name = \"set_string\")\r\n    Set<String> setStringValue;\r\n}\r\n```\r\n\r\n### Use generated code\r\n\r\nAnnotation processor automatically generates `XXXSharedPreferences` class after rebuild the project.\r\n\r\nYou can use generated `put`, `get`, `has`, `remove` methods.\r\n\r\n```java\r\nSampleSharedPreferences preferences = new SampleSharedPreferences(context);\r\npreferences.putStringValue(string);\r\npreferences.putStringValue(string, defaultValue);\r\npreferences.getStringValue();\r\npreferences.hasStringValue();\r\npreferences.removeStringValue();\r\n```\r\n\r\n## With Rx\r\n\r\n`getXXX` method returns proxy object. If you want to use the value itself, just call `asValue()`.\r\n\r\n```java\r\nboolean value = preferences.getBooleanValue().asValue();\r\n```\r\n\r\nYou can use `asObservable()` method to get a RxJava Observable.\r\n\r\n```java\r\nObservable<Boolean> value = preferences.getBooleanValue().asObservable();\r\n```\r\n\r\nYou can also use `asAction()` method to get an Action that update value.\r\n\r\n```java\r\nAction1<? super Boolean> value = preferences.getBooleanValue().asAction();\r\n```\r\n\r\nIt means you can monitor the change of Preferences automatically and compound actions with other Rx library.\r\n\r\nPlease check [sample app](https://github.com/hotchemi/tiamat/tree/master/sample) for more details.\r\n\r\n## Install\r\n\r\nTo add to your project, include the following in your **project** `build.gradle` file:\r\n\r\n```groovy\r\nbuildscript {\r\n  dependencies {\r\n    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\r\n  }\r\n}\r\n```\r\n\r\nAnd on your **app module** `build.gradle`:\r\n\r\n`${latest.version}` is [![Download](https://api.bintray.com/packages/hotchemi/maven/tiamat/images/download.svg)](https://bintray.com/hotchemi/maven/tiamat/_latestVersion)\r\n\r\n```groovy\r\napply plugin: 'android-apt'\r\n\r\ndependencies {\r\n  compile 'com.github.hotchemi:tiamat:${latest.version}'\r\n  provided 'com.github.hotchemi:tiamat-compiler:${latest.version}'\r\n}\r\n```\r\n\r\n## Note\r\n\r\nI got the idea from [kvs-schema](https://github.com/rejasupotaro/kvs-schema), [rx-preferences](https://github.com/f2prateek/rx-preferences).\r\n\r\nReally appreciate for two amazing libraries.\r\n\r\n## Licence\r\n\r\n```\r\nCopyright 2016 Shintaro Katafuchi\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}